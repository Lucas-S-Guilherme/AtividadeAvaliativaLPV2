@page "/resultados"
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject InscricaoController inscControl;
@inject CargoController cargoControl;

<h3>RESULTADOS DOS CONCURSOS</h3>

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-6">
            <label>Selecione o Cargo:</label>
            <select @onchange="CarregarResultados" class="form-control">
                <option value="0">Selecione um cargo</option>
                @foreach (var cargo in cargos)
                {
                    <option value="@cargo.Id">@cargo.NomeCargo</option>
                }
            </select>
        </div>
    </div>

    @if (inscricoes.Any())
    {
        <div class="row">
            <div class="col-md-6">
                <h4>Resultado Preliminar (Nota Total)</h4>
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Classificação</th>
                            <th>Candidato</th>
                            <th>Nota Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ var preliminar = inscricoes
                            .OrderByDescending(i => i.NotaConhGerais + i.NotaConhEspecificos)
                            .ToList(); }
                        @for (int i = 0; i < preliminar.Count; i++)
                        {
                            <tr>
                                <td>@(i + 1)º</td>
                                <td>@preliminar[i].Candidato.Nome</td>
                                <td>@((preliminar[i].NotaConhGerais + preliminar[i].NotaConhEspecificos).ToString("N1"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-6">
                <h4>Resultado Final (Critérios)</h4>
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Classificação</th>
                            <th>Candidato</th>
                            <th>Idade</th>
                            <th>Nota Espec.</th>
                            <th>Nota Geral</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ var final = inscricoes
                            .OrderByDescending(i => i.NotaConhEspecificos)
                            .ThenByDescending(i => i.NotaConhGerais)
                            .ThenByDescending(i => i.Candidato.DataNascimento)
                            .ToList(); }
                        @for (int i = 0; i < final.Count; i++)
                        {
                            var idade = DateTime.Today.Year - final[i].Candidato.DataNascimento.Year;
                            <tr>
                                <td>@(i + 1)º</td>
                                <td>@final[i].Candidato.Nome</td>
                                <td>@idade anos</td>
                                <td>@final[i].NotaConhEspecificos.ToString("N1")</td>
                                <td>@final[i].NotaConhGerais.ToString("N1")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            Selecione um cargo para visualizar os resultados.
        </div>
    }
</div>

@code {
    private List<Cargo> cargos = new();
    private List<Inscricao> inscricoes = new();

    protected override async Task OnInitializedAsync()
    {
        cargos = await cargoControl.ListaCargos();
    }

    private async Task CarregarResultados(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int cargoId) && cargoId > 0)
        {
            inscricoes = await inscControl.ObterPorCargo(cargoId);
        }
    }
}