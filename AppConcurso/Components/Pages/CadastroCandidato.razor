@page "/cadastro-candidato"
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject CandidatoController candControl;
@inject NavigationManager navegacao;

<h3>CADASTRO DE CANDIDATO</h3>

<EditForm Model="@novoCandidato" OnValidSubmit="@CadastrarCandidato" FormName="formCandidato">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Nome Completo:</label>
                    <InputText @bind-Value="novoCandidato.Nome" class="form-control" />
                    <ValidationMessage For="@(() => novoCandidato.Nome)" />
                </div>

                <div class="form-group">
                    <label>CPF:</label>
                    <InputText @bind-Value="novoCandidato.Cpf" class="form-control" />
                    <ValidationMessage For="@(() => novoCandidato.Cpf)" />
                </div>

                <div class="form-group">
                    <label>Data de Nascimento:</label>
                    <InputDate @bind-Value="novoCandidato.DataNascimento" class="form-control" />
                    <ValidationMessage For="@(() => novoCandidato.DataNascimento)" />
                </div>

                <div class="form-group mt-3">
                    <button type="submit" class="btn btn-primary">Cadastrar</button>
                    <button type="button" class="btn btn-secondary ml-2" @onclick="Cancelar">Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Candidato novoCandidato = new();

    private async Task CadastrarCandidato()
    {
        await candControl.Add(novoCandidato);
        navegacao.NavigateTo("/");
    }

    private void Cancelar()
    {
        navegacao.NavigateTo("/");
    }
}