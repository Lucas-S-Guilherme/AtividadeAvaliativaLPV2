@page "/inscricao"
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject InscricaoController inscControl;
@inject CargoController cargoControl;
@inject CandidatoController candControl;
@inject NavigationManager navegacao;
@InteractiveServer

<h3>INSCRIÇÃO DE CANDIDATO</h3>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label>Cargo:</label>
                <select class="form-control" @bind="cargoId">
                    <option value="0">Selecione um cargo</option>
                    @foreach (var cargo in cargos)
                    {
                        <option value="@cargo.Id">@cargo.NomeCargo</option>
                    }
                </select>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="form-group">
                <label>Candidato (CPF):</label>
                <input type="text" class="form-control" @bind="cpfCandidato" />
                <button class="btn btn-secondary mt-2" @onclick="BuscarCandidato">Buscar</button>
            </div>
        </div>
    </div>

    @if (candidato != null)
    {
        <div class="card mt-3">
            <div class="card-body">
                <h5 class="card-title">@candidato.Nome</h5>
                <p class="card-text">CPF: @candidato.Cpf</p>
                <p class="card-text">Nascimento: @candidato.DataNascimento.ToShortDateString()</p>
            </div>
        </div>
    }

    <div class="mt-3">
        <button class="btn btn-primary" @onclick="CadastrarInscricao" disabled="@(candidato == null || cargoId == 0)">
            Confirmar Inscrição
        </button>
        <button class="btn btn-secondary ml-2" @onclick="Cancelar">Cancelar</button>
    </div>
</div>

@code {
    private List<Cargo> cargos = new();
    private Candidato candidato;
    private int cargoId;
    private string cpfCandidato;

    protected override async Task OnInitializedAsync()
    {
        cargos = await cargoControl.ListaCargos();
    }

    private async Task BuscarCandidato()
    {
        candidato = await candControl.ObterPorCpf(cpfCandidato);
    }

    private async Task CadastrarInscricao()
    {
        var cargo = await cargoControl.ObterPorId(cargoId);
        
        var inscricao = new Inscricao
        {
            CargoIdFk = cargoId,
            CandidatoIdFk = candidato.Id,
            Cargo = cargo,
            Candidato = candidato
        };

        await inscControl.Add(inscricao);
        navegacao.NavigateTo("/");
    }

    private void Cancelar()
    {
        navegacao.NavigateTo("/");
    }
}