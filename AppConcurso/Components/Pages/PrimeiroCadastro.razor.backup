@page "/primeiroCadastro"
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject InscricaoController inscControl;
@inject CargoController cargoControl;
@inject CandidatoController candControl;
@inject NavigationManager navegacao;

<h3>CADASTRO RÁPIDO DE CANDIDATO COM INSCRIÇÃO</h3>

<div class="container">
    <div class="row mb-3">
        <div class="col-md-6">
            <h5>Dados do Candidato</h5>
            <div class="form-group">
                <label>Nome:</label>
                <input @bind="novoCandidato.Nome" class="form-control" />
            </div>
            <div class="form-group">
                <label>CPF:</label>
                <input @bind="novoCandidato.Cpf" class="form-control" />
            </div>
            <div class="form-group">
                <label>Data de Nascimento:</label>
                <input type="date" @bind="novoCandidato.DataNascimento" class="form-control" />
            </div>
        </div>

        <div class="col-md-6">
            <h5>Inscrição em Cargo</h5>
            <div class="form-group">
                <label>Cargo:</label>
                <select @onchange="SelecionarCargos" class="form-control">
                    <option value="0">Selecione um cargo</option>
                    @foreach (var cargo in listaCargos)
                    {
                        <option value="@cargo.Id">@cargo.NomeCargo</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <button class="btn btn-primary" @onclick="Salvar" disabled="@(!enabledButton)">
                Salvar Candidato e Inscrição
            </button>
            <button class="btn btn-secondary ml-2" @onclick="Cancelar">
                Cancelar
            </button>
        </div>
    </div>
</div>

@code {
    private List<Cargo> listaCargos = new();
    private Cargo cargoSelecionado = new();
    private Candidato novoCandidato = new();
    private bool enabledButton = true;
    private string numeroInsc = "";

    protected override async Task OnInitializedAsync()
    {
        listaCargos = await cargoControl.ListaCargos();
        var listaInsc = await inscControl.ListaInscricoes();
        numeroInsc = (10000 + listaInsc.Count + 1).ToString();
    }

    private async Task Salvar()
    {
        // Primeiro cadastra o candidato
        await candControl.Add(novoCandidato);
        
        // Depois cria a inscrição
        var inscricao = new Inscricao
        {
            DataInscricao = DateTime.Today,
            NumeroInsc = numeroInsc,
            Cargo = cargoSelecionado,
            Candidato = novoCandidato,
            CargoIdFk = cargoSelecionado.Id,
            CandidatoIdFk = novoCandidato.Id
        };

        await inscControl.Add(inscricao);
        await inscControl.Salvar();
        enabledButton = false;
        navegacao.NavigateTo("/");
    }

    private void Cancelar()
    {
        navegacao.NavigateTo("/");
    }

    private void SelecionarCargos(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int id))
        {
            cargoSelecionado = listaCargos.FirstOrDefault(p => p.Id == id);
        }
    }
}